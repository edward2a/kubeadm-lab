---
- name: Install NFS server packages
  ansible.builtin.apt:
    state: present
    pkg:
    - nfs-kernel-server

- name: Disable STATD
  ansible.builtin.lineinfile:
    path: /etc/default/nfs-common
    regexp: '^NEED_STATD=.*'
    line: NEED_STATD="no"
  notify:
  - Restart NFS

- name: Enable IDMAPD (NFSv4)
  ansible.builtin.lineinfile:
    path: /etc/default/nfs-common
    regexp: '^NEED_IDMAPD=.*'
    line: NEED_IDMAPD="yes"
  notify:
  - Restart NFS

- name: Disable NFS v2/v3
  ansible.builtin.lineinfile:
    path: /etc/default/nfs-kernel-server
    regexp: '^RPCNFSDOPTS=.*'
    line: 'RPCNFSDOPTS="-N 2 -N 3"'
  notify:
  - Restart NFS

- name: Disable NFS v2/v3
  ansible.builtin.lineinfile:
    path: /etc/default/nfs-kernel-server
    regexp: '^=RPCMOUNTDOPTS.*'
    line: 'RPCMOUNTDOPTS="--manage-gids -N 2 -N 3"'
  notify:
  - Restart NFS

- name: Disable rpcbind.service
  ansible.builtin.service:
    name: rpcbind.service
    enabled: false
    state: stopped

- name: mask rpcbind.service
  ansible.builtin.systemd:
    name: rpcbind.service
    masked: true

- name: Disable rpcbind.socket
  ansible.builtin.service:
    name: rpcbind.socket
    enabled: false
    state: stopped

#- name: Enable access from network ranges
#  ansible.builtin.lineinfile:
#    path: /etc/default/portmap
#    line: "portmap: {{ item }}"
#  with_items: "{{ nfs_allowed_sources }}"

- name: Configure exports
  ansible.builtin.lineinfile:
    path: /etc/exports
    line: "{{ item }}"
  with_items: "{{ nfs_exports }}"
  notify:
  - Reload NFS

